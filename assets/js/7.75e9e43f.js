(window.webpackJsonp=window.webpackJsonp||[]).push([[7],{173:function(e,t,a){"use strict";a.r(t);var s=a(0),r=Object(s.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("div",{staticClass:"content"},[a("h1",{attrs:{id:"vue预渲染实战踩坑"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#vue预渲染实战踩坑","aria-hidden":"true"}},[e._v("#")]),e._v(" vue预渲染实战踩坑")]),e._v(" "),a("h2",{attrs:{id:"项目场景"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#项目场景","aria-hidden":"true"}},[e._v("#")]),e._v(" 项目场景")]),e._v(" "),a("ul",[a("li",[e._v("公司某个项目，嵌在客户端内，因为加载慢，因为是spa项目，所以初步以为是下载脚本+渲染的时间耗时大，所以想进行优化，做ssr的话改动太大，所以后面决定先做预渲染。")])]),e._v(" "),a("h2",{attrs:{id:"坑点"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#坑点","aria-hidden":"true"}},[e._v("#")]),e._v(" 坑点")]),e._v(" "),a("ul",[a("li",[e._v("项目是要根据客户端的渠道走的，所以在dist目录下有着不同的渠道构建版本，所以在渲染事需要在router.js里增加字段配置 base: "),a("code",[e._v("/${渠道号}/")]),e._v("，然后在vue.config.js配置publicBase: "),a("code",[e._v("/${渠道号}/")]),e._v(", 不然无法做出预渲染。（当时折腾了很久）")]),e._v(" "),a("li",[e._v("因为配置预渲染的时候，需要增加相应的路径，才能进行预渲染，而每新增一个页面都要去改一次预渲染的配置，后来觉得太麻烦，而直接引入routes.js则会报错，因为webpack运行环境没配es6以及按需加载，所以最后直接使用fs.readfileSync读取文件然后通过正则取出相应的路由字段")]),e._v(" "),a("li",[e._v("nginx配置，参考vue-router的history的nginx配置")]),e._v(" "),a("li",[e._v("对于实时数据要求高的可以不去请求，只渲染静态页，拦截接口请求")])]),e._v(" "),a("h2",{attrs:{id:"预渲染缺点"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#预渲染缺点","aria-hidden":"true"}},[e._v("#")]),e._v(" 预渲染缺点")]),e._v(" "),a("ul",[a("li",[e._v("预渲染比较适合那些页面变化不大的静态页，当获取数据后页面样式变化较大的话则不太适合此方式")])])])}],!1,null,null,null);t.default=r.exports}}]);